
// requirements
let student see student info
let parent see student info

finalize login json response (not necessary atm (1:30pm 17 aug 2021))

// SMS and EMAIL
send emails for reset token (logic done, make it pretty)
email.RP1 + user.firstName + " " + user.lastName + "," + email.RP2 + '<a href="' + token + '">this link </a>' + email.RP3; 
send emails for when registered to the school (logic done, make it pretty)
"Hi" + " " + student.lastName + " " + student.firstName + " " + student.middleName.charAt(0) + ".<br /><br />You have been registered to Tierra Monte Integrated school"
send sms (logic done, make it pretty) and email (logic done, make it pretty) for announcements
"A new announcement has been posted! you may view it by visiting our website here"
send email for grade encoding (logic done, make it pretty)
"Your grade has been updated, you may view it by logging in our website here"
send sms (logic done, make it pretty) and email (logic done, make it pretty) for balance encoding 
"Your balance has been updated, you may view it by logging in our website here"

// ideas
/housekeeping
    registrar can set schoolYear
        this changes all ACTIVE students sy to new sy
        principal, accountant, prereg doesnt need schoolyear input anymore
    registrar can promote ALL ACTIVE students year level
/returning students
    active: false
        request for activation
    registrar new tab for requests, unarchive

// optimization
set password limit in reset password and set proper default password (?) ADMIN REGISTRAR PRINCIPAL MODULES

// polishing
check semicolons on if and then and catch blocks, weird
change the last res.something() of each last .then() for reach route / res.status is important ata? (frontend)
res.json na gamitin mo for route responses to client

// ideas 
github edu, use it, use learn_one email api
create move route functions to controllers?
could merge subject and teacher in section
cors (added)(cant test w postman) <- learn what for (?)

roles: int
admin: 0
principal: 1
accountant: 2
registrar: 3
teacher: 4
parent: 5
student: 6



//PRINCIPAL
//edit section (best not enable this yet)(these fields are also referenced in grade, find fix)
router.put('/principal/sections/:id', isAuth, isPrincipal, async (req, res) => {
    try {
        let section = await Section.findOneAndUpdate(
            { _id: req.params.id },
            { $set: { 
                schoolYear: req.body.schoolYear,
                yearLevel: req.body.yearLevel,
                sectionName: req.body.sectionName
            }},
            { new: true });
            res.json({
                success: true,
                section: section
            });
     } 
    catch (error) {
         res.status(500).json({
            success: false,
            message: error.message
        });
    }
});

heavily modified as of commit "added yearLevel to balance object", check github for older version of notes

let bal = 0
let runBalance = []
for (i in balance.transactionType) {
bal = (bal + balance.debit[i]) - balance.credit[i]
runBalance.push(bal)
}

